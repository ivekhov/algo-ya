class StackMax:	def __init__(self):		self.items = list()		def push(self, x):		self.items.append(x)		def pop(self):		return self.items.pop()		def get_max(self):		return max(self.items)		def size(self):		return len(self.items)def main():	with open('input.txt', 'r') as f:		cnt = int(f.readline().rstrip())		stack = StackMax()		with open ('output.txt', 'w') as f_out:			for _ in range(cnt):				call = f.readline().rstrip().split(' ')				if call[0] == 'push':					stack.push(int(call[1]))				elif call[0] == 'pop':					if stack.size() == 0:						f_out.write('error')						f_out.write('\n')					else:						stack.pop()				elif call[0] == 'get_max':					if stack.size() == 0:						f_out.write('None')						f_out.write('\n')					else:						f_out.write(str(stack.get_max()))						f_out.write('\n')						if __name__ == '__main__':	main()