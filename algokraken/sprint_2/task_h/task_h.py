class Stack:	def __init__(self):		self.items = []	def push(self, item):		self.items.append(item)	def pop(self):		return self.items.pop()	def is_empty(self):		return len(self.items) == 0	def size(self):		return len(self.items)		def tail():		return self.items[-1]def is_correct_bracket_seq(row):	if row == '':		return True	stack = Stack()	for item in row:		if item in '({[':			stack.push(item)		elif item in ']})':			if stack.is_empty():				return False			temp = stack.pop()						if item == ')':				if temp != '(': return False			elif item == ']':				if temp != '[': return False			if item == '}':				if temp != '{': return False					if stack.is_empty():		return True	return False		def main():	with open('input.txt', 'r') as f:		row = f.readline().rstrip()		res = is_correct_bracket_seq(row)		with open('output.txt', 'w') as f:		if res:			f.write('True')		else:			f.write('False')	if __name__ == '__main__':	main()